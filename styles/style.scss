@use "_variables.scss" as vars;
@use "_mixins.scss" as mix;

*,
::before,
::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  padding: 30px;
  background: linear-gradient(vars.$radialGradient);
  height: 100vh;
  font-family: "Barlow Semi Condensed", sans-serif;
  color: vars.$lightText;
  font-size: 16px;
  text-transform: uppercase;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px;
  border: 4px solid vars.$headerOutline;
  border-radius: 10px;
  font-weight: 600;
  position: relative;
  z-index: 5;
  opacity: 0;
  transform: translateY(-50px);
  animation: translateYAnim 0.5s ease-out forwards;
  h1 {
    line-height: 0.8;
    font-size: 1.125rem;
    font-weight: 700;
  }
  .score {
    background-color: vars.$lightText;
    border-radius: 5px;
    padding: 10px 25px;
    text-align: center;
    h2 {
      color: vars.$scoreText;
      font-size: 1rem;
    }
    p {
      color: vars.$darkText;
      font-weight: 700;
      font-size: 2.5rem;
    }
  }
}
@keyframes translateYAnim {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
main {
  flex-grow: 1;
}
.game {
  display: block;
  position: relative;
  height: 200px;
  width: 250px;
  margin: 70px auto 100px;
  background-image: url(../images/bg-pentagon.svg);
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  opacity: 0;
  transform: translateY(-30px);
  animation: translateYAnim 0.5s 0.3s ease-out forwards;
  .item {
    @include mix.item;
    position: absolute;
    width: 100px;
    height: 100px;
    cursor: pointer;
    &.scissors {
      @include mix.scissorsBg;
      top: 0;
      left: 50%;
      transform: translate(-50%, -50%);
    }
    &.spock {
      @include mix.spockBg;
      top: 35%;
      left: 10%;
      transform: translate(-50%, -50%);
    }
    &.paper {
      @include mix.paperBg;
      top: 35%;
      left: 90%;
      transform: translate(-50%, -50%);
    }
    &.lizard {
      @include mix.lizardBg;
      top: 95%;
      left: 20%;
      transform: translate(-50%, -50%);
    }
    &.rock {
      @include mix.rockBg;
      top: 95%;
      left: 80%;
      transform: translate(-50%, -50%);
    }
    .circle {
      @include mix.circle;
      width: 75px;
      height: 75px;
      cursor: pointer;
      img {
        width: 35px;
      }
    }
  }
}
.game.hide {
  display: none;
}
.results {
  margin-top: 30px;
  display: grid;
  grid-template-areas:
    "player computer"
    "playAgain playAgain";
  .results-area {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transform: scale(0);
    &.player-area {
      animation: scaleAnim 0.3s ease-in-out forwards;
    }
    &.computer-area {
      animation: scaleAnim 0.3s 0.5s ease-in-out forwards;
    }
    .item {
      @include mix.item;
      width: 130px;
      height: 130px;
      margin-bottom: 15px;
      position: relative;
      &.scissors {
        @include mix.scissorsBg;
      }
      &.spock {
        @include mix.spockBg;
      }
      &.paper {
        @include mix.paperBg;
      }
      &.lizard {
        @include mix.lizardBg;
      }
      &.rock {
        @include mix.rockBg;
      }
      &.winner::after {
        content: "";
        width: 200%;
        height: 200%;
        border-radius: 50%;
        position: absolute;
        z-index: -5;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: radial-gradient(
          #2b3858 0%,
          #2b3858 45%,
          #253252 46%,
          #253252 57%,
          #1f294a 58%,
          #1f294a 100%
        );
      }
      .circle {
        @include mix.circle;
        width: 100px;
        height: 100px;
        img {
          width: 50px;
        }
      }
    }
  }
  .play-again-container {
    grid-area: playAgain;
    margin-top: 20px;
    z-index: 5;
    .result-txt {
      font-size: 3rem;
      letter-spacing: 1.3px;
      text-align: center;
    }
    .play-again-btn {
      @include mix.button;
      display: block;
      margin: 0 auto;
      background-color: vars.$lightText;
      border: 2px solid vars.$lightText;
      padding: 10px;
      width: 80%;
      color: vars.$darkText;
      font-weight: 600;
      margin-top: 15px;
      animation: scaleAnim 0.3s 1.1s ease-out forwards;
      &:hover {
        border: 2px solid vars.$lightText;
        background-color: transparent;
        color: vars.$lightText;
      }
    }
  }
}
.results.hide {
  display: none;
}
.rules {
  display: flex;
  justify-content: center;
  margin: 40px 0 15px;
  .rules-btn {
    @include mix.button;
    background-color: transparent;
    border: 2px solid vars.$lightText;
    padding: 10px 30px;
    color: vars.$lightText;
    animation: scaleAnim 0.3s 0.8s ease-out forwards;
    &:hover {
      background-color: vars.$lightText;
      color: hsl(237, 49%, 15%);
    }
  }
}
@keyframes scaleAnim {
  to {
    opacity: 1;
    transform: scale(1);
  }
}
.rules-img-container {
  @include mix.scaleOptions;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  inset: 0;
  z-index: 5;
  background-color: vars.$lightText;
  .rules-img-content {
    display: flex;
    flex-direction: column;
    h2 {
      color: vars.$darkText;
      text-align: center;
      font-size: 1.875rem;
      margin-bottom: 50px;
    }
    .rules-img {
      width: 250px;
      margin-bottom: 80px;
    }
    .rules-img-close-btn {
      width: 30px;
      height: 30px;
      border: none;
      background-color: transparent;
      display: block;
      margin: 0 auto;
      font-size: 2.5rem;
      color: vars.$headerOutline;
      cursor: pointer;
    }
  }
}
.rules-img-container.hide {
  display: none;
}
.attribution {
  font-size: 11px;
  text-align: center;
  color: vars.$headerOutline;
  opacity: 0;
  animation: opacityAnim 0.3s 0.8s ease-out forwards;
  text-transform: capitalize;
  a {
    color: hsl(228, 45%, 44%);
  }
}
@keyframes opacityAnim {
  to {
    opacity: 1;
  }
}
@media screen and (min-width: vars.$mobile) {
  .game {
    .item {
      &.spock {
        left: 0;
      }
      &.paper {
        left: 100%;
      }
    }
  }
  .results {
    .results-area {
      p {
        letter-spacing: 1.3px;
      }
    }
  }
  .rules-img-container {
    background-color: rgba(0, 0, 0, 0.5);
    opacity: 1;
    transform: scale(1);
    animation: none;
    .rules-img-content {
      @include mix.scaleOptions;
      background-color: vars.$lightText;
      border-radius: 20px;
      padding: 30px 30px 60px;
      display: grid;
      grid-template-areas:
        "title closeBtn"
        "img img"
        "img img";
      h2 {
        text-align: start;
      }
      .rules-img {
        width: 300px;
        grid-area: img;
      }
      .rules-img-close-btn {
        margin-right: 0;
        display: flex;
        justify-content: center;
        align-items: center;
      }
    }
  }
}
@media screen and (min-width: vars.$desktop) {
  header {
    margin: 0 300px;
  }
  main {
    position: relative;
  }
  .game {
    height: 250px;
  }
  .results {
    margin: 50px 100px;
    grid-template-areas: "player playAgain computer";
    align-items: center;
    .results-area {
      .item {
        margin-top: 30px;
        width: 200px;
        height: 200px;
        &.winner::after {
          width: 250%;
          height: 250%;
        }
        .circle {
          width: 155px;
          height: 155px;
          img {
            width: 70px;
          }
        }
      }
    }
    .play-again-container {
      .play-again-btn {
        width: 60%;
      }
    }
  }
  .rules {
    position: absolute;
    right: 0;
  }
}
