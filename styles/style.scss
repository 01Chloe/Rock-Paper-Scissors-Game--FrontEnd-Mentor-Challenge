@use "_variables.scss" as vars;
@use "_mixins.scss" as mix;

*,
::before,
::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  padding: 30px;
  background: linear-gradient(vars.$radialGradient);
  height: 100vh;
  font-family: "Barlow Semi Condensed", sans-serif;
  color: #f1f1f1;
  font-size: 16px;
  display: flex;
  flex-direction: column;
}
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px;
  margin-bottom: 70px;
  border: 4px solid vars.$headerOutline;
  border-radius: 10px;
  text-transform: uppercase;
  font-weight: 600;
  opacity: 0;
  transform: translateY(-50px);
  animation: translateYAnim 0.5s ease-out forwards;
  h1 {
    line-height: 0.8;
    font-size: 1.125rem;
    font-weight: 700;
  }
  .score {
    background-color: #f1f1f1;
    border-radius: 5px;
    padding: 10px 25px;
    text-align: center;
    h2 {
      color: vars.$scoreText;
      font-size: 1rem;
    }
    p {
      color: vars.$darkText;
      font-weight: 700;
      font-size: 2.5rem;
    }
  }
}
@keyframes translateYAnim {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
main {
  flex-grow: 1;
  .game {
    display: block;
    position: relative;
    height: 200px;
    width: 250px;
    margin: 0 auto;
    background-image: url(../images/bg-pentagon.svg);
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    opacity: 0;
    transform: translateY(-30px);
    animation: translateYAnim 0.5s 0.3s ease-out forwards;
    .item {
      @include mix.item;
      position: absolute;
      width: 100px;
      height: 100px;
      cursor: pointer;
      &.scissors {
        background: linear-gradient(vars.$scissorsGradient);
        top: 0;
        left: 50%;
        transform: translate(-50%, -50%);
      }
      &.spock {
        background: linear-gradient(vars.$cyan);
        top: 35%;
        left: 10%;
        transform: translate(-50%, -50%);
      }
      &.paper {
        background: linear-gradient(vars.$paperGradient);
        top: 35%;
        left: 90%;
        transform: translate(-50%, -50%);
      }
      &.lizard {
        background: linear-gradient(vars.$lizardGradient);
        top: 95%;
        left: 20%;
        transform: translate(-50%, -50%);
      }
      &.rock {
        background: linear-gradient(vars.$rockGradient);
        top: 95%;
        left: 80%;
        transform: translate(-50%, -50%);
      }
      .circle {
        @include mix.circle;
        width: 75px;
        height: 75px;
        cursor: pointer;
        img {
          width: 35px;
        }
      }
    }
  }
  .game.hide {
    display: none;
  }
  .results {
    display: flex;
    justify-content: space-around;
    align-items: center;
    .results-area {
      display: flex;
      flex-direction: column-reverse;
      justify-content: center;
      align-items: center;
      opacity: 0;
      transform: scale(0);
      &.player-area {
        animation: scaleAnim 0.3s ease-in-out forwards;
      }
      &.computer-area {
        animation: scaleAnim 0.3s 0.5s ease-in-out forwards;
      }
      p {
        text-transform: uppercase;
      }
      .item {
        @include mix.item;
        width: 130px;
        height: 130px;
        margin-bottom: 15px;
        &.scissors {
          background: linear-gradient(vars.$scissorsGradient);
        }
        &.spock {
          background: linear-gradient(vars.$cyan);
        }
        &.paper {
          background: linear-gradient(vars.$paperGradient);
        }
        &.lizard {
          background: linear-gradient(vars.$lizardGradient);
        }
        &.rock {
          background: linear-gradient(vars.$rockGradient);
        }
        .circle {
          @include mix.circle;
          width: 100px;
          height: 100px;
          img {
            width: 50px;
          }
        }
      }
    }
  }
  .results.hide {
    display: none;
  }
  .rules {
    display: flex;
    justify-content: center;
    margin: 70px 0 30px;
    .rules-btn {
      background-color: transparent;
      border-radius: 10px;
      border: 2px solid #f1f1f1;
      padding: 10px 30px;
      color: #f1f1f1;
      font-family: "Barlow Semi Condensed", sans-serif;
      text-transform: uppercase;
      letter-spacing: 1.5px;
      font-size: 1.25rem;
      transition: background-color 0.3s ease-out;
      opacity: 0;
      transform: scale(0);
      animation: scaleAnim 0.3s 0.5s ease-out forwards;
      cursor: pointer;
      &:hover {
        background-color: #f1f1f1;
        color: hsl(237, 49%, 15%);
      }
    }
  }
}
@keyframes scaleAnim {
  to {
    opacity: 1;
    transform: scale(1);
  }
}
.rules-img-container {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  inset: 0;
  z-index: 5;
  width: 100%;
  height: 100%;
  background-color: #f1f1f1;
  opacity: 0;
  transform: scale(0);
  animation: scaleAnim 0.3s ease-out forwards;
  .rules-img-content {
    display: flex;
    flex-direction: column;
    h2 {
      color: vars.$darkText;
      text-transform: uppercase;
      text-align: center;
      font-size: 1.875rem;
      margin-bottom: 50px;
    }
    .rules-img {
      width: 250px;
      margin-bottom: 80px;
    }
    .rules-img-close-btn {
      width: 30px;
      height: 30px;
      border: none;
      background-color: transparent;
      display: block;
      margin: 0 auto;
      font-size: 2.5rem;
      color: vars.$headerOutline;
      cursor: pointer;
    }
  }
}
.rules-img-container.hide {
  display: none;
}
.attribution {
  font-size: 11px;
  text-align: center;
  color: vars.$headerOutline;
  opacity: 0;
  animation: opacityAnim 0.3s 0.8s ease-out forwards;
}
.attribution a {
  color: hsl(228, 45%, 44%);
}
@keyframes opacityAnim {
  to {
    opacity: 1;
  }
}
@media screen and (min-width: vars.$mobile) {
  main {
    .game {
      .item {
        &.spock {
          left: 0;
        }
        &.paper {
          left: 100%;
        }
      }
    }
    .results {
      .results-area {
        p {
          letter-spacing: 1.3px;
        }
      }
    }
  }
  .rules-img-container {
    background-color: rgba(0, 0, 0, 0.5);
    opacity: 1;
    transform: scale(1);
    animation: none;
    .rules-img-content {
      background-color: #f1f1f1;
      border-radius: 20px;
      padding: 30px 30px 60px;
      display: grid;
      grid-template-areas:
        "title closeBtn"
        "img img"
        "img img";
      opacity: 0;
      transform: scale(0);
      animation: scaleAnim 0.3s ease-out forwards;
      h2 {
        text-align: start;
      }
      .rules-img {
        width: 300px;
        grid-area: img;
      }
      .rules-img-close-btn {
        margin-right: 0;
        display: flex;
        justify-content: center;
        align-items: center;
      }
    }
  }
}
@media screen and (min-width: vars.$desktop) {
  header {
    margin: 0 300px 100px;
  }
  main {
    position: relative;
    .game {
      height: 250px;
    }
    .results {
      margin: 0 300px;
      justify-content: space-between;
      .results-area {
        flex-direction: column;
        .item {
          margin-top: 30px;
          margin-bottom: 0;
          width: 200px;
          height: 200px;
          .circle {
            width: 155px;
            height: 155px;
            img {
              width: 70px;
            }
          }
        }
      }
    }
    .rules {
      position: absolute;
      right: 0;
    }
  }
}
